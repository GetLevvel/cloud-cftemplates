---
Description: KMS Key for Secrets Management

Parameters:

  AppName:
    Description: Name of the application being deployed. Appends this prefix to resources
    Type: String

  EnvName:
    Description: Which environment is this for?
    Type: String

Resources:

  # KMS Key for Secrets
  Key:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "Encryption key used by the ${EnvName} ${AppName} application to encrypt secrets"
      KeyPolicy:
        Id: key-policy
        Version: '2012-10-17'
        Statement:
          - 
            Sid: Allows the users to encrypt, decrypt and generate data keys with this KMS key.
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Principal:
              AWS: "arn:aws:iam::${AWS::AccountId}:root" # TODO
      Tags:
        - Key: Application
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref EnvName

  KeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AppName}/${EnvName}"
      TargetKeyId: !Ref Key

  DecryptIamPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${AppName}-${EnvName}-kms-decrypt"
      Description: !Sub "Allow Decryption of KMS Secrets for the ${AppName} application"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - kms:Decrypt
              - kms:DescribeKey
            Resource: !GetAtt Key.Arn
          - Effect: "Allow"
            Action:
              - ssm:GetParameter
            Resource: "*"

Outputs:
  
  DecryptIamPolicy:
    Description: IAM Policy ARN to decrypt KMS Key
    Value: !Ref DecryptIamPolicy
